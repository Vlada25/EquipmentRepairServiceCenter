@page "/repairingModels/update/{id}"
@attribute [Authorize]

<PageTitle>Reapirind models page</PageTitle>

@using BlazorApp1.Data
@using EquipmentRepairServiceCenter.ASP.ViewModels;
@using EquipmentRepairServiceCenter.DTO.RepairingModel;
@using EquipmentRepairServiceCenter.Domain.Models;
@using EquipmentRepairServiceCenter.Domain;
@using EquipmentRepairServiceCenter.Interfaces.Services;
@inject IRepairingModelsService RepairingModelsService
@inject NavigationManager NavigationManager

<h2>Repairing Model Update</h2>

<EditForm Model="@repairingModel" OnValidSubmit="SaveRepairingModel">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="repairingModel.Name" />
        </div>
        <ValidationMessage For="@(() => repairingModel.Name)" />
    </div>

    <div class="mb-3">
        <label for="Specifications" class="form-label">Specifications</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="repairingModel.Specifications" />
        </div>
        <ValidationMessage For="@(() => repairingModel.Specifications)" />
    </div>

    <div class="mb-3">
        <label for="ParticularQualities" class="form-label">Particular Qualities</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="repairingModel.ParticularQualities" />
        </div>
        <ValidationMessage For="@(() => repairingModel.ParticularQualities)" />
    </div>

    <div class="mb-3">
        <label for="PhotoUrl" class="form-label">Photo Url</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="repairingModel.PhotoUrl" />
        </div>
        <ValidationMessage For="@(() => repairingModel.PhotoUrl)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public string id { get; set; }

    private RepairingModelForUpdateDto repairingModel = new();

    protected override async Task OnParametersSetAsync()
    {
        var entity = await RepairingModelsService.GetById(Guid.Parse(id));

        repairingModel.Specifications = entity.Specifications;
        repairingModel.ParticularQualities = entity.ParticularQualities;
        repairingModel.PhotoUrl = entity.PhotoUrl;
        repairingModel.Name = entity.Name;
    }

    private async Task SaveRepairingModel()
    {
        repairingModel.Id = Guid.Parse(id);
        await RepairingModelsService.Update(repairingModel);

        Cancel();
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/repairingModels");
    }
}